/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, StatusLog as PrismaStatusLog } from "@prisma/client";

export class StatusLogServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.StatusLogCountArgs, "select">
  ): Promise<number> {
    return this.prisma.statusLog.count(args);
  }

  async statusLogs(
    args: Prisma.StatusLogFindManyArgs
  ): Promise<PrismaStatusLog[]> {
    return this.prisma.statusLog.findMany(args);
  }
  async statusLog(
    args: Prisma.StatusLogFindUniqueArgs
  ): Promise<PrismaStatusLog | null> {
    return this.prisma.statusLog.findUnique(args);
  }
  async createStatusLog(
    args: Prisma.StatusLogCreateArgs
  ): Promise<PrismaStatusLog> {
    return this.prisma.statusLog.create(args);
  }
  async updateStatusLog(
    args: Prisma.StatusLogUpdateArgs
  ): Promise<PrismaStatusLog> {
    return this.prisma.statusLog.update(args);
  }
  async deleteStatusLog(
    args: Prisma.StatusLogDeleteArgs
  ): Promise<PrismaStatusLog> {
    return this.prisma.statusLog.delete(args);
  }
}
